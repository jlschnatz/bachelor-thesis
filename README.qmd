---
title: "Assessing Publication Bias in Meta-Analyses"
subtitle: "A Simulation-Based Estimation Approach Focusing on the Joint Distribution of Effect Size and Sample Size"
author: "Jan Luca Schnatz"
format: 
  gfm:
    preview-mode: raw
    standalone: true
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  echo = FALSE
)
```

## Project Structure

`R/`: contains all R-scripts for data analysis and visualization

```{r}
fs::dir_tree("R/")
```

The `R/functions.R` files contains all custom R-functions that are defined for the project. The file h_*(1-4).R containts the analysis of the four hypotheses. The `R/combine_plots.R` file combines all plots generated for each hypothesis into one large multi-panel figure. The `R/07_check_validity.R` script containts diagnostic code to assess the problems within the parameter estimation of SPEEC. The `R/08_check_convergence.R` file contains a shiny app to assess the parameter convergence for each study. Finally `R/09_dispersion.R` contains code to analyse the overall dispersion of the estimated publication bias parameter.

`data/`: Data files

```{r}
fs::dir_tree("data/", type = "directory")
```

The data is generally structured into three subdirectories (meta, optim, src). The `meta` directory contains all data regarding the raw and processed meta-analytical data. The `optim` directory contains all data related to the parameter optimization (raw, and processed). Finally, the `src` folder contains additional data that is needed within the Quarto file to compile the thesis.

`scripts/`: Quarto scripts that are compiled into a reproducible report

```{r}
fs::dir_tree("scripts/", type = "file")
```

## Reproducability

First, if not already installed, download `git` (https://git-scm.com/downloads). Then clone this repository from GitHub:

```bash

cd to/your/directory
git clone https://github.com/jlschnatz/bachelor-thesis.git 
# or
git clone git@github.com:jlschnatz/bachelor-thesis.git 

```

```{r}
#| include: false

docker_version <- system("docker --version",  intern = TRUE)

```

Next, you need to install Docker (`r docker_version`). To build the Dockerfile for this project dynamically run:

```bash

bash ./build_dockerfile.sh 

```

To build the Docker image from the created Dockerfile, run:


```bash

bash ./virtualize.sh

```

Now that you have build to image, you can start a container with a bash entry point to interactively explore the container and run the pipeline:

```bash

sudo docker run -it --rm --entrypoint bash schnatz/thesis

```

```{r}
#| echo: false

knitr::include_graphics(here::here("figures/dag.png"))

```

## Optimisation Code

The code to run the optimisation lies in a seperate repository on GitHub an is accessible on: https://github.com/jlschnatz/speec_analysis

# License

Shield: [![CC BY-SA 4.0][cc-by-sa-shield]][cc-by-sa]

This work is licensed under a
[Creative Commons Attribution-ShareAlike 4.0 International License][cc-by-sa].

[![CC BY-SA 4.0][cc-by-sa-image]][cc-by-sa]

[dag]: figures/dag.png
[cc-by-sa]: http://creativecommons.org/licenses/by-sa/4.0/
[cc-by-sa-image]: https://licensebuttons.net/l/by-sa/4.0/88x31.png
[cc-by-sa-shield]: https://img.shields.io/badge/License-CC%20BY--SA%204.0-lightgrey.svg